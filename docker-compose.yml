version: '3.8'  

x-spark-common: &spark-common
  image: bitnami/spark:latest
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
  networks:
    - code-with-yu

x-airflow-common: &airflow-common
  build:
    context: .  
    dockerfile: Dockerfile
  env_file:
    - airflow.env
  volumes:
    - ./jobs:/opt/airflow/jobs
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
  depends_on:
    - postgres
  networks:
    - code-with-yu

services:
  spark-master:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"

  spark-worker:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: breast_cancer
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data  
    networks:
      - code-with-yu

  flask_app:
    build:
      context: ./flask_app  
    environment: 
      FLASK_APP: app.py  
      FLASK_ENV: development  
    volumes:
      - ./flask_app:/opt/airflow/dags/flask_app  
      - ./flask_app/assets/graph:/opt/airflow/dags/flask_app/assets/graph  
    ports:
      - "5000:5000"  
    depends_on:
      - postgres
    networks:
      - code-with-yu

  webserver:
    <<: *airflow-common
    command: bash -c "airflow db upgrade && airflow webserver"
    ports:
      - "8080:8080"
    depends_on:
      - scheduler
      - postgres

  scheduler:
    <<: *airflow-common
    command: bash -c "
      airflow db upgrade &&
      airflow users create \
        --username admin \
        --firstname Hajar \
        --lastname Halmaoui \
        --role Admin \
        --email hajarhalmaoui.1@gmail.com \
        --password admin || echo 'Admin user already exists' &&
      airflow scheduler"
    depends_on:
      - postgres

networks:
  code-with-yu:

volumes:
  pgdata:  
